{"id":"116","name":"Populating Next Right Pointers in Each Node","link":"/problems/populating-next-right-pointers-in-each-node/","ac":"36.3%","difficulty":"Medium","description":"<p>\r\nGiven a binary tree\r\n<pre>\r\n    struct TreeLinkNode {\r\n      TreeLinkNode *left;\r\n      TreeLinkNode *right;\r\n      TreeLinkNode *next;\r\n    }\r\n</pre>\r\n</p><p>Populate each next pointer to point to its next right node. If there is no next right node, the next pointer should be set to <code>NULL</code>.</p><p>Initially, all next pointers are set to <code>NULL</code>.</p><p>\r\n<b>Note:</b>\r\n<ul>\r\n<li>You may only use constant extra space.</li>\r\n<li>You may assume that it is a perfect binary tree (ie, all leaves are at the same level, and every parent has two children).</li>\r\n</ul>\r\n</p><p>\r\nFor example,<br>\r\nGiven the following perfect binary tree,<br>\r\n<pre>\r\n         1\r\n       /  \\\r\n      2    3\r\n     / \\  / \\\r\n    4  5  6  7\r\n</pre>\r\n</p><p>\r\nAfter calling your function, the tree should look like:<br>\r\n<pre>\r\n         1 -&gt; NULL\r\n       /  \\\r\n      2 -&gt; 3 -&gt; NULL\r\n     / \\  / \\\r\n    4-&gt;5-&gt;6-&gt;7 -&gt; NULL\r\n</pre>\r\n</p>"}