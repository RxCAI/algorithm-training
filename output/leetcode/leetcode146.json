{"id":"146","name":"LRU Cache","link":"/problems/lru-cache/","ac":"15.6%","difficulty":"Hard","description":"<p>\r\nDesign and implement a data structure for Least Recently Used (LRU) cache. It should support the following operations: <code>get</code> and <code>set</code>.\r\n</p><p>\r\n<code>get(key)</code> - Get the value (will always be positive) of the key if the key exists in the cache, otherwise return -1.<br>\r\n<code>set(key, value)</code> - Set or insert the value if the key is not already present. When the cache reached its capacity, it should invalidate the least recently used item before inserting a new item.\r\n</p>"}