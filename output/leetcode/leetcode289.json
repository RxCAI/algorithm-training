{"id":"289","name":"Game of Life","link":"/problems/game-of-life/","ac":"32.8%","difficulty":"Medium","description":"<p>\r\nAccording to the <a href=\"https://en.wikipedia.org/wiki/Conway%27s_Game_of_Life\" target=\"_blank\">Wikipedia&apos;s article</a>: &quot;The <b>Game of Life</b>, also known simply as <b>Life</b>, is a cellular automaton devised by the British mathematician John Horton Conway in 1970.&quot;\r\n</p><p>\r\nGiven a <i>board</i> with <i>m</i> by <i>n</i> cells, each cell has an initial state <i>live</i> (1) or <i>dead</i> (0). Each cell interacts with its <a href=\"https://en.wikipedia.org/wiki/Moore_neighborhood\" target=\"_blank\">eight neighbors</a> (horizontal, vertical, diagonal) using the following four rules (taken from the above Wikipedia article):\r\n</p><p>\r\n<ol>\r\n<li>Any live cell with fewer than two live neighbors dies, as if caused by under-population.</li>\r\n<li>Any live cell with two or three live neighbors lives on to the next generation.</li>\r\n<li>Any live cell with more than three live neighbors dies, as if by over-population..</li>\r\n<li>Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.</li>\r\n</ol>\r\n</p><p>\r\nWrite a function to compute the next state (after one update) of the board given its current state.</p><p>\r\n<b>Follow up</b>: <br>\r\n<ol>\r\n<li>Could you solve it in-place? Remember that the board needs to be updated at the same time: You cannot update some cells first and then use their updated values to update other cells.</li>\r\n<li>In this question, we represent the board using a 2D array. In principle, the board is infinite, which would cause problems when the active area encroaches the border of the array. How would you address these problems?</li>\r\n</ol>\r\n</p><p><b>Credits:</b><br>Special thanks to <a href=\"https://leetcode.com/discuss/user/jianchao.li.fighter\">@jianchao.li.fighter</a> for adding this problem and creating all test cases.</p>"}