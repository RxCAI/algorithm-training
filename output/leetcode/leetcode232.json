{"id":"232","name":"Implement Queue using Stacks","link":"/problems/implement-queue-using-stacks/","ac":"33.9%","difficulty":"Easy","description":"<p>\r\nImplement the following operations of a queue using stacks.\r\n<ul>\r\n<li>\r\npush(x) -- Push element x to the back of queue.\r\n</li>\r\n<li>\r\npop() -- Removes the element from in front of queue.\r\n</li>\r\n<li>\r\npeek() -- Get the front element.\r\n</li>\r\n<li>\r\nempty() -- Return whether the queue is empty.\r\n</li>\r\n</ul>\r\n<b>Notes:</b><br>\r\n<ul>\r\n<li>You must use <i>only</i> standard operations of a stack -- which means only <code>push to top</code>, <code>peek/pop from top</code>, <code>size</code>, and <code>is empty</code> operations are valid.</li>\r\n<li>Depending on your language, stack may not be supported natively. You may simulate a stack by using a list or deque (double-ended queue), as long as you use only standard operations of a stack.</li>\r\n<li>You may assume that all operations are valid (for example, no pop or peek operations will be called on an empty queue).</li>\r\n</ul>\r\n</p>"}